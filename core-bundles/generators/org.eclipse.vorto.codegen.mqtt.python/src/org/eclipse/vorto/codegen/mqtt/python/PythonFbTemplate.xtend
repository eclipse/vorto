/*******************************************************************************
 *  Copyright (c) 2017 Oliver Meili
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  and Eclipse Distribution License v1.0 which accompany this distribution.
 *   
 *  The Eclipse Public License is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 *  The Eclipse Distribution License is available at
 *  http://www.eclipse.org/org/documents/edl-v10.php.
 *   
 *  Contributors:
 *  Oliver Meili <omi@ieee.org>
 *******************************************************************************/
package org.eclipse.vorto.codegen.mqtt.python

import org.eclipse.vorto.codegen.api.IFileTemplate
import org.eclipse.vorto.codegen.api.InvocationContext
import org.eclipse.vorto.core.api.model.functionblock.FunctionblockModel

class PythonFbTemplate implements IFileTemplate<FunctionblockModel> {
	
	override getFileName(FunctionblockModel fb) {
		return fb.name + ".py";
	}
	
	override getPath(FunctionblockModel fb) {
		return "model/functionblock";
	}
	
	override getContent(FunctionblockModel fb, InvocationContext context) {
		'''
		# // Generated by Vorto from «fb.namespace».«fb.name»
		
		class «fb.name»(object):
		    def __init__(self):
		        «IF fb.functionblock.status != null»
		        	«FOR prop : fb.functionblock.status.properties»
		        	self.«prop.name» = 0.0
		        	«ENDFOR»
		        «ENDIF»
		
		    «IF fb.functionblock.status != null»
		    	«FOR prop : fb.functionblock.status.properties»
		    		### Status property «prop.name»
		    		@property
		    		def «prop.name»(self):
		    		    return self.__«prop.name»[0]
		    		
		    		@«prop.name».setter
		    		def «prop.name»(self, value):
		    		    self.__«prop.name» = (value, True)
		    		
		    	«ENDFOR»
		    «ENDIF»
		    def serialize(self, serializer):
		        «IF fb.functionblock.status != null»
		        	«FOR prop : fb.functionblock.status.properties»
		        	if self.__«prop.name»[1]:
		        	       serializer.serialize_property("«prop.name»", self.__«prop.name»[0])
		        	       self.__«prop.name» = (self.__«prop.name»[0], False)
		        	«ENDFOR»
		        «ENDIF»
		'''
	}
	
}