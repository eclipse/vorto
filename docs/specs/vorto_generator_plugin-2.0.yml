openapi: 3.0.0
info:
  title: Vorto Generator Plugin API
  description: REST Endpoints for providing a Vorto Generator Plugin for the Eclipse Vorto Repository. Refer to the <a target="_blank" href="https://raw.githubusercontent.com/eclipse/vorto/master/plugin-sdk/plugin-api/Readme.md">Generator Plugin SDK Documentation</a>
  contact:
    name: Eclipse Vorto Team
    url: https://www.eclipse.org/vorto
    email: vorto-development@bosch-si.com
  version: '2.0'
servers:
- url: /api/2/plugins/generators
  variables: {}
paths:
  /{pluginkey}:
    put:
      tags:
      - Code Generation Plugin
      summary: Plugin Execution
      description: Executes the generator plugin for a given Vorto model and returns generated file(s).
      operationId: PluginExecution
      parameters:
      - name: pluginkey
        in: path
        description: Plugin key identifying the generator
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Complete Vorto Model including all referenced models and platform - specific attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelContent'
        required: true
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      deprecated: false
      servers:
      - url: /api/2/plugins/generators
        variables: {}
  /{pluginkey}/info:
    get:
      tags:
      - Code Generation Plugin
      summary: Plugin Info
      description: Plugin Meta information
      operationId: PluginInfo
      parameters:
      - name: pluginkey
        in: path
        description: Plugin Key identifying the generator
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginInfo'
      deprecated: false
      servers:
      - url: /api/2/plugins/generators
        variables: {}
components:
  schemas:
    Stereotype:
      title: Stereotype
      type: object
      properties:
        name:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string
    PluginInfo:
      title: PluginInfo
      required:
      - key
      - description
      - vendor
      - documentationUrl
      - image32x32
      - image144x144
      - configKeys
      type: object
      properties:
        key:
          type: string
          description: plugin key
        name:
          type: string
          description: A descriptive name of the plugin
          example: '"Bosch IoT Suite"'
        description:
          type: string
          description: A short description of the generator
        vendor:
          type: string
          description: Name of the creator or company
          example: '"Bosch Software Innovations"'
        documentationUrl:
          type: string
          description: HTTP Link to documentation
        image32x32:
          type: string
          description: Base64 encoded logo of the generator (32x32)
        image144x144:
          type: string
          description: Base64 encoded logo of the generator (144x144)
        configTemplate:
          type: string
          description: Template of the plugin configuration UI (html format)
        configKeys:
          type: array
          items:
            type: string
          description: A set of keys that can be passed as configuration parameters to the plugin
    Infomodel:
      title: Infomodel
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - type: object
        properties:
          functionblocks:
            type: array
            items:
              $ref: '#/components/schemas/ModelProperty'
    ModelType:
      title: ModelType
      enum:
      - Functionblock
      - InformationModel
      - Datatype
      - Mapping
      type: string
      example: Functionblock
    ModelProperty:
      title: ModelProperty
      type: object
      properties:
        targetPlatformKey:
          type: string
        stereotypes:
          type: array
          items:
            $ref: '#/components/schemas/Stereotype'
        mappingReference:
          $ref: '#/components/schemas/ModelId'
        mandatory:
          type: boolean
        name:
          type: string
        description:
          type: string
        type:
          type: object
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        attributes:
          type: array
          items:
            type: object
        primitive:
          type: boolean
        multiple:
          type: boolean
    Constraint:
      title: Constraint
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ConstraintType'
        value:
          type: string
    ConstraintType:
      title: ConstraintType
      enum:
      - MIN
      - MAX
      - STRLEN
      - REGEX
      - MIMETYPE
      - SCALING
      - DEFAULT
      - NULLABLE
      type: string
      example: MIN
    EnumModel:
      title: EnumModel
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - type: object
        properties:
          literals:
            type: array
            items:
              $ref: '#/components/schemas/EnumLiteral'
    ModelId:
      title: ModelId
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        version:
          type: string
        prettyFormat:
          type: string
    EnumLiteral:
      title: EnumLiteral
      type: object
      properties:
        name:
          type: string
        parent:
          $ref: '#/components/schemas/ModelId'
    EntityModel:
      title: EntityModel
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - type: object
        properties:
          properties:
            type: array
            items:
              $ref: '#/components/schemas/ModelProperty'
    BaseModel:
      title: BaseModel
      type: object
      properties:
        targetPlatformKey:
          type: string
        stereotypes:
          type: array
          items:
            $ref: '#/components/schemas/Stereotype'
        mappingReference:
          $ref: '#/components/schemas/ModelId'
        vortolang:
          type: string
        id:
          $ref: '#/components/schemas/ModelId'
        type:
          $ref: '#/components/schemas/ModelType'
        displayName:
          type: string
        description:
          type: string
        fileName:
          type: string
        references:
          type: array
          items:
            $ref: '#/components/schemas/ModelId'
    ModelContent:
      title: ModelContent
      type: object
      properties:
        root:
          $ref: '#/components/schemas/ModelId'
        models:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BaseModel'
    FunctionblockModel:
      title: FunctionblockModel
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - type: object
        properties:
          configurationProperties:
            type: array
            items:
              $ref: '#/components/schemas/ModelProperty'
          statusProperties:
            type: array
            items:
              $ref: '#/components/schemas/ModelProperty'
          faultProperties:
            type: array
            items:
              $ref: '#/components/schemas/ModelProperty'
          events:
            type: array
            items:
              $ref: '#/components/schemas/ModelEvent'
          operations:
            type: array
            items:
              $ref: '#/components/schemas/Operation'
    ModelEvent:
      title: ModelEvent
      type: object
      properties:
        name:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/ModelProperty'
    Operation:
      title: Operation
      type: object
      properties:
        targetPlatformKey:
          type: string
        stereotypes:
          type: array
          items:
            $ref: '#/components/schemas/Stereotype'
        mappingReference:
          $ref: '#/components/schemas/ModelId'
        name:
          type: string
        description:
          type: string
        result:
          $ref: '#/components/schemas/ReturnType'
        params:
          type: array
          items:
            $ref: '#/components/schemas/Param'
        breakable:
          type: boolean
    ReturnType:
      title: ReturnType
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ModelId'
        primitive:
          type: boolean
        multiple:
          type: boolean
    Param:
      title: Param
      type: object
      properties:
        targetPlatformKey:
          type: string
        stereotypes:
          type: array
          items:
            $ref: '#/components/schemas/Stereotype'
        mappingReference:
          $ref: '#/components/schemas/ModelId'
        mandatory:
          type: boolean
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/ModelId'
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        primitive:
          type: boolean
        multiple:
          type: boolean
tags: []
