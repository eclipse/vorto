sudo: required
dist: trusty

language: java

services:
  - docker

jdk: oraclejdk8

addons:
  sonarcloud:
    organization: "vorto"
    token:
      secure: $SONAR_TOKEN
    branches:
      - development

cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.sonar/cache'

before_install:
  - echo "MAVEN_OPTS='-Xms1g -Xmx2g'" > ~/.mavenrc

install:
  - git clone https://github.com/digitalcraftsman/hugo-material-docs.git website/themes/hugo-material-docs
  - wget https://github.com/gohugoio/hugo/releases/download/v0.52/hugo_0.52_Linux-64bit.deb -O /tmp/hugo.deb && sudo dpkg -i /tmp/hugo.deb
  - npm install -g --save remark-cli remark-preset-lint-recommended remark-validate-links remark-lint-no-dead-urls remark-message-control remark-preset-lint-markdown-style-guide remark-lint
  - pip install --user awscli
script:
  - remark -i .remark_ignore -f -u validate-links .
  - remark -i .remark_ignore -u lint-no-dead-urls .
  - if [ "$TRAVIS_PULL_REQUEST" = "false" -a \( "$TRAVIS_BRANCH" = "development" -o "$TRAVIS_BRANCH" = "master" \) ] ; then
    mvn --fail-fast -q clean package -DskipTests -P checkstyle;
    mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent package sonar:sonar -P coverage;
    else mvn --fail-fast -q clean package -P checkstyle;
    fi

  # copying the mariadb java client
  - mkdir ~/wgetDownload
  - wget -P ~/wgetDownload/ https://downloads.mariadb.com/Connectors/java/connector-java-2.3.0/mariadb-java-client-2.3.0.jar

  # setting up artifact uploads to aws
  - mkdir -p ~/aws-upload/tmp
  - export TRAVIS_COMMIT_SHORT=$(git rev-parse --short HEAD)
  - export ELASTIC_BEANSTALK_LABEL="${TRAVIS_JOB_NUMBER}_${TRAVIS_COMMIT_SHORT}"
  # copying the repository artifact to the aws-upload
  - export ARTIFACT_NAME=infomodelrepository
  - export ELASTIC_BEANSTALK_DESCRIPTION="Build-Job ${TRAVIS_JOB_NUMBER} - Git Revision ${TRAVIS_COMMIT_SHORT} ${ARTIFACT_NAME}"
  - cp ./repository/repository-server/target/infomodelrepository.jar ~/aws_upload/tmp
  - cd ~/aws_upload/tmp
  - jar -xvf infomodelrepository.jar
  - rm -f infomodelrepository.jar
  - cp ~/wgetDownload/mariadb-java-client-2.3.0.jar ./BOOT-INF/lib/
  - jar -cvf infomodelrepository-dbclient.jar .
  - cp ~/aws_upload/tmp/infomodelrepository-dbclient.jar ~/aws-upload/${ARTIFACT_NAME}_${ELASTIC_BEANSTALK_LABEL}.jar
  - rm -rf ~/aws_upload/tmp

  # copying the official generators to the aws-upload folder
  - export ARTIFACT_NAME=generator-runner-exec
  - export ELASTIC_BEANSTALK_DESCRIPTION="Build-Job ${TRAVIS_JOB_NUMBER} - Git Revision ${TRAVIS_COMMIT_SHORT} ${ARTIFACT_NAME}"
  - cp ./generators/generator-runner/target/generator-runner-exec.jar ~/aws-upload/${ARTIFACT_NAME}_${ELASTIC_BEANSTALK_LABEL}.jar
  # list the contents of aws-upload folder
  - ls -al ~/aws-upload

  # to send images to docker hub
  - docker build --build-arg JAR_FILE=./repository/repository-server/target/infomodelrepository.jar -f docker/Repository_Dockerfile -t eclipsevorto/vorto-repo:nightly .;
  - docker build --build-arg JAR_FILE=./generators/generator-runner/target/generator-runner-exec.jar -f docker/Generators_Dockerfile -t eclipsevorto/vorto-generators:nightly .;
  - if [ -n "$TRAVIS_TAG" ]; then
    docker build --build-arg JAR_FILE=./repository/repository-server/target/infomodelrepository.jar -f docker/Repository_Dockerfile -t eclipsevorto/vorto-repo:latest .;
    docker build --build-arg JAR_FILE=./generators/generator-runner/target/generator-runner-exec.jar -f docker/Generators_Dockerfile -t eclipsevorto/vorto-generators:latest .;
    docker build --build-arg JAR_FILE=./repository/repository-server/target/infomodelrepository.jar -f docker/Repository_Dockerfile -t eclipsevorto/vorto-repo:$TRAVIS_TAG .;
    docker build --build-arg JAR_FILE=./generators/generator-runner/target/generator-runner-exec.jar -f docker/Generators_Dockerfile -t eclipsevorto/vorto-generators:$TRAVIS_TAG .;
    fi;

before_deploy:
  - export AWS_DEFAULT_REGION=$VORTO_S3_REGION
  - export AWS_ACCESS_KEY_ID="$VORTO_AWS_ACCESS_KEY"
  - export AWS_SECRET_ACCESS_KEY="$VORTO_AWS_SECRET_KEY"

deploy:
#  - provider: script
#    script: build-scripts/repackage-repo.sh || travis_terminate 1;
#    skip_cleanup: true
#    on:
#      all_branches: true
  - provider: script
    script: bash docker/docker_push
    skip_cleanup: true
    on:
      branch: master
  - provider: script
    script:
      - aws s3 cp ~/aws-upload/infomodelrepository_${ELASTIC_BEANSTALK_LABEL}.jar s3://$VORTO_S3_BUCKET --acl "private" --storage-class "STANDARD_IA" --only-show-errors --no-guess-mime-type
    skip_cleanup: true
    on:
      branch:
        - development
        - feature/issue-1436_integrate_auto_deployment_using_travisci
  - provider: script
    script:
      - aws s3 cp ~/aws-upload/generator-runner-exec_${ELASTIC_BEANSTALK_LABEL}.jar s3://$VORTO_S3_BUCKET --acl "private" --storage-class "STANDARD_IA" --only-show-errors --no-guess-mime-type
    skip_cleanup: true
    on:
      branch:
        - development
        - feature/issue-1436_integrate_auto_deployment_using_travisci
  - provider: script
    script:
      - aws elasticbeanstalk create-application-version --application-name "VortoRepoServer" --no-auto-create-application --version-label "build-job_${ELASTIC_BEANSTALK_LABEL}_repo" --description "Build ${TRAVIS_JOB_NUMBER} - Git Revision ${TRAVIS_COMMIT_SHORT} for repository" --source-bundle S3Bucket="$VORTO_S3_BUCKET",S3Key="infomodelrepository_${ELASTIC_BEANSTALK_LABEL}.jar"
    skip_cleanup: true
    on:
      branch:
        - development
        - feature/issue-1436_integrate_auto_deployment_using_travisci
  - provider: script
    script:
      - aws elasticbeanstalk create-application-version --application-name "VortoRepoServer" --no-auto-create-application --version-label "build-job_${ELASTIC_BEANSTALK_LABEL}_official_gen" --description "Build ${TRAVIS_JOB_NUMBER} - Git Revision ${TRAVIS_COMMIT_SHORT} for offical generators" --source-bundle S3Bucket="$VORTO_S3_BUCKET",S3Key="generator-runner-exec_${ELASTIC_BEANSTALK_LABEL}.jar"
    skip_cleanup: true
    on:
      branch:
        - development
        - feature/issue-1436_integrate_auto_deployment_using_travisci
  - provider: script
    script:
      - aws elasticbeanstalk update-environment --application-name "VortoRepoServer" --environment-name "Vortogenerators-env-dev" --version-label "build-job_${ELASTIC_BEANSTALK_LABEL}_official_gen"
    skip_cleanup: true
    on:
      branch:
        - development
        - feature/issue-1436_integrate_auto_deployment_using_travisci
