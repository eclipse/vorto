sudo: required
dist: trusty

jobs:
  include:
    - stage: deploy
      name: "Deploy Repository"

      language: java

      services:
        - docker

      jdk: oraclejdk8

      cache:
        npm: false
        directories:
          - '$HOME/.m2/repository'
          - '$HOME/.sonar/cache'

      before_install:
        - echo "MAVEN_OPTS='-Xms1g -Xmx2g'" > ~/.mavenrc
        - sudo sysctl net.ipv4.ip_forward=1

      install:
        - git clone https://github.com/digitalcraftsman/hugo-material-docs.git website/themes/hugo-material-docs
        - wget https://github.com/gohugoio/hugo/releases/download/v0.52/hugo_0.52_Linux-64bit.deb -O /tmp/hugo.deb && sudo dpkg -i /tmp/hugo.deb
        - npm install -g --save remark-cli to-vfile remark-preset-lint-recommended remark-validate-links remark-lint-no-dead-urls remark-message-control remark-preset-lint-markdown-style-guide remark-lint
        - pip install --user awscli

      script:
        - remark -i .remark_ignore -f -u validate-links .
        - remark -i .remark_ignore -u lint-no-dead-urls .
        - mvn --fail-fast -q clean package -P checkstyle
        - mkdir ./awsupload/repo
        - docker build --build-arg JAR_FILE=./repository/repository-server/target/infomodelrepository.jar -f docker/Repository_Dockerfile -t eclipsevorto/vorto-repo:nightly .;
        - echo "TRAVIS_TAG------$TRAVIS_TAG" 
        - if [ -n "$TRAVIS_TAG" ]; then
          docker build --build-arg JAR_FILE=./repository/repository-server/target/infomodelrepository.jar -f docker/Repository_Dockerfile -t eclipsevorto/vorto-repo:latest .;
          docker build --build-arg JAR_FILE=./repository/repository-server/target/infomodelrepository.jar -f docker/Repository_Dockerfile -t eclipsevorto/vorto-repo:$TRAVIS_TAG .;
          fi

      before_deploy:
        - export AWS_DEFAULT_REGION=$VORTO_S3_REGION
        - export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
        - export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
        - export TRAVIS_COMMIT_SHORT=$(git rev-parse --short HEAD)
        - export ELASTIC_BEANSTALK_LABEL="${TRAVIS_JOB_NUMBER}_${TRAVIS_COMMIT_SHORT}"
        - export ARTIFACT=$(ls repository/repository-server/target/infomodelrepository.jar)
        - export ELASTIC_BEANSTALK_DESCRIPTION="Build-Job ${TRAVIS_JOB_NUMBER} - Git Revision ${TRAVIS_COMMIT_SHORT} ${ARTIFACT_NAME}"

      deploy:
        - provider: script
          script: bash docker/docker_push
          on:
            tags: true
        
        - provider: script
          script: bash docker/docker_push
          on:
            branch: development

        - provider: elasticbeanstalk
          access_key_id: "$AWS_ACCESS_KEY_ID"
          secret_access_key: "$AWS_SECRET_ACCESS_KEY"
          zip-file: "$ARTIFACT"
          region: "$VORTO_S3_REGION"
          app: "Vorto-Dev-Environment"
          env: "vorto-dev"
          bucket_name: "$VORTO_S3_BUCKET"
          skip_cleanup: true
          on:
            branch: development
            
        - provider: elasticbeanstalk
          access_key_id: "$AWS_ACCESS_KEY_ID"
          secret_access_key: "$AWS_SECRET_ACCESS_KEY"
          zip-file: "$ARTIFACT"
          region: "$VORTO_S3_REGION"
          app: "Vorto-Prod-New-Environment"
          env: "vorto-prod-new"
          bucket_name: "$VORTO_S3_BUCKET"
          skip_cleanup: true
          on:
            branch: master
